import java.text.SimpleDateFormat

buildscript {
	ext {
		kotlinVersion = '1.3.72'
		springBootVersion = '2.3.1.RELEASE'
		springVersion = '5.2.7.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url = 'https://maven.taktik.be/content/groups/public' }
		maven { url = 'https://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE')
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath 'com.taktik.gradle:gradle-plugin-docker-java:2.0.4'

		classpath('com.taktik.gradle:gradle-plugin-git-version:1.0.13')
		classpath('com.github.ben-manes:gradle-versions-plugin:0.21.0')
	}
}

apply plugin: 'git-version'
group = 'org.taktik.icure'
version = gitVersion
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker-java'
apply plugin: 'com.github.ben-manes.versions' // usage: ./gradlew dependencyUpdates

configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

sourceCompatibility = JavaVersion.VERSION_11
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

compileJava {
    options.fork = true
    options.forkOptions.with {
        memoryMaximumSize = "2048m"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "11"
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'submodules/Ektorp/org.ektorp/src/main/java'
            srcDir 'submodules/Ektorp/org.ektorp.spring/src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'submodules/Ektorp/org.ektorp.spring/src/main/resources'
        }
    }
}

repositories {
	mavenCentral()
    maven {
        url = "https://www.e-contract.be/maven2/"
    }
    maven {
        url = "http://repo.ehealth.fgov.be/artifactory/maven2/"
    }
    maven {
        url = "https://maven.taktik.be/content/groups/public"
    }
	maven { url = 'http://oss.jfrog.org/artifactory/oss-snapshot-local/' } // required for swagger 3 snapshot, remove it once it is published
	flatDir {
        dirs 'libs'
    }
}


jar {
    manifest {
        attributes(
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                'Build-Revision' : gitVersion,
                'Created-By'     : "Gradle ${gradle.gradleVersion}",
                'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
        )
    }
}

dependencies {
    api("com.github.pozo:mapstruct-kotlin:1.3.1.2")
    kapt("com.github.pozo:mapstruct-kotlin-processor:1.3.1.2")

    optional group: 'org.springframework.boot', name:'spring-boot-configuration-processor'

    compile group: 'org.springframework.boot', name:'spring-boot-starter-mail', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name:'spring-boot-starter-webflux', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name:'spring-boot-starter-security', version:"${springBootVersion}"
    compile group: 'org.springframework.boot', name:'spring-boot-starter-actuator', version:"${springBootVersion}"

	compile group: 'com.fasterxml.jackson.module', name:'jackson-module-kotlin', version:'2.11.0'
    compile group: 'com.fasterxml.jackson.core', name:'jackson-databind', version:'2.11.0'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.3.7'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-reactor', version: '1.3.7'
    compile group: 'org.jetbrains.kotlinx', name: 'kotlinx-collections-immutable-jvm', version: '0.3'

    compile 'com.squareup.moshi:moshi:1.8.0'
    compile 'com.squareup.moshi:moshi-kotlin:1.8.0'

    compile group: 'org.eclipse.jetty', name: 'jetty-client', version: '9.4.26.v20200117'

    compile group: 'org.springframework.session', name: 'spring-session-core', version: '2.2.1.RELEASE'

	compile group: 'org.springframework', name: 'spring-aspects', version: springVersion
    compile group: 'org.springframework', name: 'spring-websocket', version: springVersion
    compile group: 'org.springframework', name: 'spring-orm', version: springVersion

    // Logging
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.11'
    compile group: 'ch.qos.logback', name: 'logback-access', version: '1.1.11'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.12'
    compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.12'
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.12'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.12'

    // Java Commons
    compile group: 'org.taktik.commons', name: 'commons-uti', version: '1.0'
    compile(group: 'org.taktik.commons', name: 'commons-service', version: '1.0') {
        exclude group: 'org.taktik.commons', module: 'commons-cluster'
        exclude group: 'org.taktik.commons', module: 'commons-utils'
    }

	// APIs
	compile group: 'javax.annotation', name: 'jsr250-api', version: '1.0'
	compile group: 'org.apache.ws.commons.axiom', name: 'axiom-impl', version: '1.2.15'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.11'

	// Others
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
	compile group: 'org.ow2.asm', name: 'asm', version: '5.0.4'
	compile group: 'org.ow2.asm', name: 'asm-commons', version: '5.0.4'
	compile group: 'com.google.guava', name: 'guava', version: '20.0'
	compile group: 'joda-time', name: 'joda-time', version: '2.9.7'
	compile group: 'org.jdom', name: 'jdom-legacy', version: '1.1.3'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
	compile group: 'org.apache.commons', name: 'commons-compress', version: '1.12'
	compile group: 'com.eaio.uuid', name: 'uuid', version: '3.2'
	compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.2'
	compile group: 'com.fasterxml.uuid', name: 'java-uuid-generator', version: '3.1.3'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.2'
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.3'
    compile group: 'com.sendgrid', name: 'sendgrid-java', version: '4.4.7'
    compile group: 'org.mapstruct', name: 'mapstruct', version: '1.3.1.Final'
	compile group: 'org.apache.axis2', name: 'axis2-kernel', version: '1.5.6'
	compile group: 'org.apache.axis2', name: 'axis2-adb', version: '1.5.6'

	compile group: 'org.apache.lucene', name: 'lucene-core', version: '4.10.4'
	compile group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: '4.10.4'


	// Bouncy Castle
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.53'
	compile group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: '1.53'

	//2FA
	compile group:'org.jboss.aerogear', name:'aerogear-otp-java', version:'1.0.0'

	// Swagger
    compile "org.springdoc:springdoc-openapi-webflux-ui:1.3.0"
    compile "org.springdoc:springdoc-openapi-kotlin:1.3.0"

	//Saxon
	compile group: 'net.sf.saxon', name: 'Saxon-HE', version: '9.6.0-6'

	//Ektorp dependencies
	compile group: 'de.undercouch', name: 'actson', version: '1.2.0'


	//DTO check
	compile group: 'com.github.javaparser', name: 'javaparser-core', version: '2.0.0'

	//JSP stuff
	compile group: 'org.apache.taglibs', name: 'taglibs-standard-spec', version: '1.2.5'
	compile group: 'org.apache.taglibs', name: 'taglibs-standard-impl', version: '1.2.5'

	//EH Validator
	compile group: 'com.ibm.icu', name: 'icu4j', version: '57.1'
	compile name: 'probatron4j-custom-0.7.4'
	compile name: 'ehvalidator-service-core-2.1.1'

    //HAPI
    compile group: 'ca.uhn.hapi', name: 'hapi-structures-v25', version: '2.3'

    // mustache
    compile group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.9.5'

	//Cloud version
	compile group: 'com.hazelcast', name: 'hazelcast'
	compile group: 'com.hazelcast', name: 'hazelcast-spring'
    compile group: 'com.hazelcast', name: 'hazelcast-kubernetes', version: '1.3'

    compile group: 'javax.activation', name: 'activation', version: '1.1'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compile group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.1'

	// Runtime
	runtime group: 'org.javassist', name: 'javassist', version: '3.18.1-GA'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileJava.dependsOn(processResources)

// Setup resolution strategy
configurations.all {
    resolutionStrategy {
        // Don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
        force 'junit:junit:4.11'
        force group: 'net.sf.jsignature.io-tools', name: 'easystream', version: '1.2.12'
    }

    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	//exclude group: 'org.springframework.boot', module: 'spring-boot-starter-reactor-netty' // otherwise transitively imported by spring-boot-starter-webflux
    exclude group: 'com.sun.security', module: 'pkcs11'
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: 'org.mortbay.jetty', module: 'jetty'
    exclude group: 'commons-logging', module: 'commons-logging'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'log4j', module: 'apache-log4j-extras'
    exclude group: 'asm', module: 'asm'
    exclude group: 'javax', module: 'javaee-api'
    exclude group: 'org.apache.openejb', module: 'javaee-api'
}

springBoot {
	mainClassName = "org.taktik.icure.ICureBackendApplicationKt"
}

bootRun {
   if ( project.hasProperty('jvmArgs') ) {
        jvmArgs = (project.jvmArgs.split("\\s+") as List)
   }
}
